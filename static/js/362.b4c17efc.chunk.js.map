{"version":3,"file":"static/js/362.b4c17efc.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactEditor/ContactEditor.styled.jsx","components/ContactEditor/ContactEditor.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  margin-left: 40px;\n  list-style-type: decimal;\n  padding: 0;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Li = styled.li``;\n\nexport const PContact = styled.p``;\n\nexport const Button = styled.button`\n  margin-left: 10px;\n  font-size: 14px;\n  cursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\n\nimport {\n  Ul,\n  Li,\n  PContact,\n  Button,\n} from 'components/ContactList/ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const { contactsList } = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const getFilterContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contactsList.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const deleteItem = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n  const contacts = getFilterContacts();\n\n  return (\n    <Ul>\n      {contacts.length === 0 && <p>There is not any contacts</p>}\n      {contacts.map(({ name, number, id }) => {\n        return (\n          <Li key={id}>\n            <PContact>\n              {name}: {number}\n              <Button type=\"button\" onClick={() => deleteItem(id)}>\n                Delete\n              </Button>\n            </PContact>\n          </Li>\n        );\n      })}\n    </Ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormContact = styled(Form)`\n  padding: 20px;\n  width: 500px;\n`;\nexport const LabelName = styled.label`\n  text-align: left;\n  margin-bottom: 20px;\n`;\nexport const Input = styled(Field)`\n  padding: 3px;\n  display: block;\n  width: 300px;\n  text-align: left;\n  margin: 0;\n`;\nexport const Error = styled(ErrorMessage)`\n  /* position: absolute; */\n  margin-top: -30px;\n  margin-left: 320px;\n  width: 300px;\n\n  text-align: left;\n  font-size: 16px;\n  color: red;\n`;\nexport const Button = styled.button`\n  width: 90px;\n  text-align: left;\n  margin: 0;\n`;\n","import { Formik } from 'formik';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport {\n  LabelName,\n  FormContact,\n  Input,\n  Button,\n} from 'components/ContactForm/ContactForm.styled';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const { contactsList } = useSelector(selectContacts);\n\n  const handleInput = (values, { resetForm }) => {\n    const dublicateContact = findDublicate(values, contactsList);\n    dublicateContact\n      ? alert(`${values.name} or ${values.number} is already in contacts`)\n      : dispatch(addContact(values));\n\n    resetForm();\n  };\n\n  const findDublicate = (contact, contactsList) => {\n    return contactsList.find(\n      item =>\n        item.name.toLowerCase() === contact.name.toLowerCase() ||\n        item.number === contact.number\n    );\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleInput}>\n      <FormContact autoComplete=\"on\">\n        <LabelName htmlFor=\"name\">\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Enter name\"\n          />\n        </LabelName>\n        <LabelName htmlFor=\"number\">\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"Enter number\"\n          />\n        </LabelName>\n        <Button type=\"submit\">Add contact</Button>\n      </FormContact>\n    </Formik>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Div = styled.div`\n  display: flex;\n  margin-left: 20px;\n  align-items: left;\n  flex-direction: column;\n`;\nexport const Label = styled.label`\n  font-size: 24px;\n  margin-bottom: 5px;\n`;\n\nexport const Input = styled.input`\n  font-size: 16px;\n  width: 300px;\n  margin-bottom: 20px;\n  padding: 3px;\n  font-weight: 700;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { updFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nimport { Div, Input, Label } from 'components/Filter/Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const { filter } = useSelector(selectFilter);\n\n  const changeFilter = event => {\n    dispatch(updFilter(event.currentTarget.value));\n  };\n\n  return (\n    <Div>\n      <Label htmlFor=\"text\">Find contacts by name</Label>\n      <Input type=\"text\" name=\"filter\" value={filter} onChange={changeFilter} />\n    </Div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  width: 100%;\n  gap: 4px;\n  margin-bottom: 12px;\n`;\nexport const Input = styled.input`\n  flex-grow: 1;\n  padding: 8px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  font: inherit;\n  line-height: 16px;\n  letter-spacing: 0.01em;\n  resize: none;\n`;\nexport const Button = styled.button`\n  border: none;\n  font: inherit;\n  cursor: pointer;\n  outline: none;\n  padding: 0 8px;\n  border-radius: 4px;\n  background-color: #3f51b5;\n  color: #fff;\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n\n  &:active {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nexport const Div = styled.div`\n  padding: 20px;\n`;\n\nexport const Header = styled.p`\n  font-size: 24px;\n  font-weight: 700;\n  margin: 0 0 10px 20px;\n`;\n\nexport const PContact = styled.p`\n  font-size: 24px;\n  font-weight: 700;\n  margin: 40px 0px 20px 30px;\n`;\nexport const Section = styled.section`\n  border: 1px solid;\n  display: flex;\n  flex-direction: column;\n  width: 650px;\n  font-size: 20px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { Div, Header, PContact, Section } from './ContactEditor.styled';\n\nexport const ContactEditor = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  //   return (\n  //     <Form onSubmit={handleSubmit}>\n  //       <Input name=\"text\" />\n  //       <Button type=\"submit\">Add contact</Button>\n  //     </Form>\n  //   );\n  // };\n\n  return (\n    <Div>\n      <Header>Phonebook</Header>\n\n      <Section>\n        <ContactForm />\n      </Section>\n      <PContact>Contacts</PContact>\n      {isLoading && !error && <Loader />}\n      <Filter />\n    </Div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactEditor } from 'components/ContactEditor/ContactEditor';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <ContactEditor />\n      <div>{isLoading && <Loader />}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","selectFilter","filter","selectIsLoading","isLoading","selectError","error","Ul","styled","Li","PContact","Button","ContactList","dispatch","useDispatch","contactsList","useSelector","normalizedFilter","toLowerCase","contact","name","includes","getFilterContacts","length","map","number","id","type","onClick","contactId","deleteContact","FormContact","Form","LabelName","Input","Field","ErrorMessage","initialValues","ContactForm","findDublicate","find","item","onSubmit","values","resetForm","alert","addContact","autoComplete","htmlFor","placeholder","pattern","title","Div","Label","Filter","value","onChange","event","updFilter","currentTarget","Header","Section","ContactEditor","useEffect","fetchContacts","Loader","Contacts","Helmet"],"sourceRoot":""}