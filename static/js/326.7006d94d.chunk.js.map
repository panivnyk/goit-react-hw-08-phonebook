{"version":3,"file":"static/js/326.7006d94d.chunk.js","mappings":"0OAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,QAAV,EAEtBC,EAAe,SAAAF,GAAK,OAAIA,EAAMG,MAAV,EAEpBC,EAAkB,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,SAAnB,E,mBCFvBC,EAAKC,EAAAA,EAAAA,GAAH,mIAQFC,EAAKD,EAAAA,EAAAA,GAAH,sBAEFE,EAAWF,EAAAA,EAAAA,EAAH,sBAERG,EAASH,EAAAA,EAAAA,OAAH,sF,SCFNI,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAiBC,EAAAA,EAAAA,IAAYhB,GAA7Be,aACFX,GAASY,EAAAA,EAAAA,IAAYb,GAYrBD,EAVoB,WACxB,IAAMe,EAAmBb,EAAOc,cAChC,OAAOH,EAAaX,QAAO,SAAAe,GAAO,OAChCA,EAAQC,KAAKF,cAAcG,SAASJ,EADJ,GAGnC,CAKgBK,GAEjB,OACE,UAACf,EAAD,WACuB,IAApBL,EAASqB,SAAgB,qDACzBrB,EAASsB,KAAI,YAA0B,IAAvBJ,EAAsB,EAAtBA,KAAMK,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC5B,OACE,SAACjB,EAAD,WACE,UAACC,EAAD,WACGU,EADH,KACWK,GACT,SAACd,EAAD,CAAQgB,KAAK,SAASC,QAAS,kBAbxBC,EAayCH,OAZ1Db,GAASiB,EAAAA,EAAAA,IAAcD,IADN,IAAAA,CAawB,EAA/B,wBAHKH,EASZ,MAGN,EC5CYK,EAAOvB,EAAAA,EAAAA,KAAH,+FAMJwB,EAAQxB,EAAAA,EAAAA,MAAH,iNAULG,EAASH,EAAAA,EAAAA,OAAH,8TCdNyB,EAAgB,WAC3B,IAAMpB,GAAWC,EAAAA,EAAAA,MAcjB,OACE,UAACiB,EAAD,CAAMG,SAba,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTC,EAAOF,EAAKG,SAASD,KAAKE,MAChC,GAAa,KAATF,EAGF,OAFA1B,GAAS6B,EAAAA,EAAAA,IAAWH,SACpBF,EAAKM,QAGPC,MAAM,4CACP,EAGC,WACE,SAACZ,EAAD,CAAOZ,KAAK,UACZ,SAAC,EAAD,CAAQO,KAAK,SAAb,4BAGL,E,UCjBc,SAASkB,IACtB,IAAMhC,GAAWC,EAAAA,EAAAA,MACXR,GAAYU,EAAAA,EAAAA,IAAYX,GAM9B,OAJAyC,EAAAA,EAAAA,YAAU,WACRjC,GAASkC,EAAAA,EAAAA,MACV,GAAE,CAAClC,KAGF,iCACE,SAACoB,EAAD,KACA,yBAAM3B,IAAa,SAAC0C,EAAA,EAAD,OACnB,SAACpC,EAAD,MAGL,C","sources":["redux/contacts/selectors.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactEditor/ContactEditor.styled.jsx","components/ContactEditor/ContactEditor.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  margin-left: 40px;\n  list-style-type: decimal;\n  padding: 0;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Li = styled.li``;\n\nexport const PContact = styled.p``;\n\nexport const Button = styled.button`\n  margin-left: 10px;\n  font-size: 14px;\n  cursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\n\nimport {\n  Ul,\n  Li,\n  PContact,\n  Button,\n} from 'components/ContactList/ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const { contactsList } = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const getFilterContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contactsList.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const deleteItem = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n  const contacts = getFilterContacts();\n\n  return (\n    <Ul>\n      {contacts.length === 0 && <p>There is not any contacts</p>}\n      {contacts.map(({ name, phone, id }) => {\n        return (\n          <Li key={id}>\n            <PContact>\n              {name}: {phone}\n              <Button type=\"button\" onClick={() => deleteItem(id)}>\n                Delete\n              </Button>\n            </PContact>\n          </Li>\n        );\n      })}\n    </Ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  width: 100%;\n  gap: 4px;\n  margin-bottom: 12px;\n`;\nexport const Input = styled.input`\n  flex-grow: 1;\n  padding: 8px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  font: inherit;\n  line-height: 16px;\n  letter-spacing: 0.01em;\n  resize: none;\n`;\nexport const Button = styled.button`\n  border: none;\n  font: inherit;\n  cursor: pointer;\n  outline: none;\n  padding: 0 8px;\n  border-radius: 4px;\n  background-color: #3f51b5;\n  color: #fff;\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n\n  &:active {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { Form, Input, Button } from './ContactEditor.styled';\n\nexport const ContactEditor = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const text = form.elements.text.value;\n    if (text !== '') {\n      dispatch(addContact(text));\n      form.reset();\n      return;\n    }\n    alert('Contact cannot be empty. Enter some text!');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input name=\"text\" />\n      <Button type=\"submit\">Add contactk</Button>\n    </Form>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactEditor } from 'components/ContactEditor/ContactEditor';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactEditor />\n      <div>{isLoading && <Loader />}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","selectFilter","filter","selectIsLoading","isLoading","Ul","styled","Li","PContact","Button","ContactList","dispatch","useDispatch","contactsList","useSelector","normalizedFilter","toLowerCase","contact","name","includes","getFilterContacts","length","map","phone","id","type","onClick","contactId","deleteContact","Form","Input","ContactEditor","onSubmit","e","preventDefault","form","currentTarget","text","elements","value","addContact","reset","alert","Contacts","useEffect","fetchContacts","Loader"],"sourceRoot":""}